{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarab\\\\Desktop\\\\React uppgift\\\\ReactApi\\\\e-co\\\\src\\\\routes\\\\ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuth) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 27\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 27\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProtectedRoute, \"ccLlqVdYzn3X5NS8YnsdgLyqe+g=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/sarab/Desktop/React uppgift/ReactApi/e-co/src/routes/ProtectedRoute.js"],"names":["React","Route","Redirect","useSelector","ProtectedRoute","component","Component","rest","isAuth","state","auth","isAuthenticated","props","pathname","from","location"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAAA;;AAE/D,QAAMC,MAAM,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,eAArB,CAA1B;AAEA,sBACO,QAAC,KAAD,OAAWJ,IAAX;AAAkB,IAAA,MAAM,EAAGK,KAAK,IAAI;AAChC,UAAGJ,MAAH,EAAW;AACP,4BAAO,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE,QAAZ;AAAsBJ,YAAAA,KAAK,EAAE;AAACK,cAAAA,IAAI,EAAEF,KAAK,CAACG;AAAb;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ;AAND;AAAA;AAAA;AAAA;AAAA,UADP;AASH,CAbM;;GAAMX,c;UAEMD,W;;;KAFNC,c","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport const ProtectedRoute = ({component: Component, ...rest}) => {\r\n    \r\n    const isAuth = useSelector(state => state.auth.isAuthenticated)\r\n\r\n    return (\r\n           <Route {...rest } render={ props => {\r\n               if(isAuth) {\r\n                   return <Component {...props} />\r\n               } else {\r\n                   return <Redirect to={{ pathname: '/login', state: {from: props.location }}} />\r\n               }\r\n           }} />\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}